apiVersion: v1
kind: Namespace
metadata:
  name: client1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1
  namespace: client1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app1
  template:
    metadata:
      labels:
        app: app1
    spec:
      containers:
      - name: app1
        image: mcr.microsoft.com/azuredocs/aks-helloworld:v1
        ports:
        - containerPort: 80
        env:
        - name: TITLE
          value: "client1 app1 external"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app2
  namespace: client1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app2
  template:
    metadata:
      labels:
        app: app2
    spec:
      containers:
      - name: app2
        image: mcr.microsoft.com/azuredocs/aks-helloworld:v1
        ports:
        - containerPort: 80
        env:
        - name: TITLE
          value: "client1 app2 internal"
---
apiVersion: v1
kind: Service
metadata:
  name: app1-service
  namespace: client1
spec:
  ports:
  - port: 8080
    targetPort: 80
    name: tcp
  selector:
    app: app1
---
apiVersion: v1
kind: Service
metadata:
  name: app2-service
  namespace: client1
spec:
  ports:
  - port: 8080
    targetPort: 80
    name: tcp8080
  - port: 8081
    targetPort: 80
    name: tcp8081
  selector:
    app: app2
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: client1-ingress
  namespace: client1
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: client1.aks.choudeshell.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: app1-service
            port:
              number: 8080